name: Gatsby DevOps
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - feature/*
env:
  PRODUCTION_DOMAIN: quibox.surge.sh
  STAGING_DOMAIN: quibox-staging.surge.sh

jobs:
  Install_Dependencies:
    container: node:16
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ github.sha }}
      - run: npm ci
      - run: npm install -g gatsby-cli
      - run: gatsby build
      - run: sed -i "s/%%VERSION%%/${{ github.sha }}/g" ./public/index.html
      - run: echo ${{github.event_name}}
      - name: Upload built public folder
        uses: actions/upload-artifact@v3
        with:
          name: public
          path: public

  Test_artifact:
    container: alpine
    runs-on: ubuntu-latest
    needs: [Install_Dependencies]
    steps:
      - name: Download public folder
        uses: actions/download-artifact@v3
        with:
          name: public
      - run: grep "Gatsby" ./index.html

#  Deploy_review:
#    environment:
#      name: review/$GITHUB_ENV
#      url: http://$GITHUB_ENV
#    steps:
#      - uses: DevCsalvia/CompositeAction@main
#        with:
#          should_execute: github.ref != 'refs/heads/master'
#          domain: $GITHUB_ENV
#          image_name: review/$GITHUB_ENV
#          login: ${{secrets.surge_login}}
#          token: ${{secrets.surge_token}}
#
#  Deploy_staging:
#    environment:
#      name: staging
#      url: http://${{ env.STAGING_DOMAIN }}
#    steps:
#      - uses: DevCsalvia/CompositeAction@main
#        with:
#          should_execute: github.ref == 'refs/heads/master'
#          domain: ${{ env.STAGING_DOMAIN }}
#          image_name: staging
#          login: ${{secrets.surge_login}}
#          token: ${{secrets.surge_token}}
#
#
#  Deploy_production:
#    environment:
#      name: production
#      url: http://${{ env.PRODUCTION_DOMAIN }}
#    steps:
#      - uses: DevCsalvia/CompositeAction@main
#        with:
#          should_execute: github.ref == 'refs/heads/master'
#          domain: ${{ env.PRODUCTION_DOMAIN }}
#          image_name: production
#          login: ${{secrets.surge_login}}
#          token: ${{secrets.surge_token}}

  Test_deployment:
    container: alpine
    runs-on: ubuntu-latest
    needs: [Deploy_production]
    if: github.ref == 'refs/heads/master'
    steps:
      - run: apk --no-cache add curl
      - run: echo curl --version
      - run: echo ${{ env.PRODUCTION_DOMAIN }}
      - run: curl https://${{ env.PRODUCTION_DOMAIN }} | tac | tac | grep -q "Gatsby"

