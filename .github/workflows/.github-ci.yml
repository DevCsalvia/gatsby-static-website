name: Gatsby DevOps
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - feature/*
env:
  PRODUCTION_DOMAIN: quibox.surge.sh
  STAGING_DOMAIN: quibox-staging.surge.sh

jobs:
  Install_Dependencies:
    container: node:16
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ github.sha }}
      - run: npm ci
      - run: npm install -g gatsby-cli
      - run: gatsby build
      - run: sed -i "s/%%VERSION%%/${{ github.sha }}/g" ./public/index.html
      - run: echo ${{github.event_name}}
      - name: Upload built public folder
        uses: actions/upload-artifact@v3
        with:
          name: public
          path: public

  Test_artifact:
    container: alpine
    runs-on: ubuntu-latest
    needs: [Install_Dependencies]
    steps:
      - name: Download public folder
        uses: actions/download-artifact@v3
        with:
          name: public
      - run: grep "Gatsby" ./index.html

  .Base_template: &deploy
    environment:
      url: http://${{ env.DOMAIN }}
    container: node:16
    runs-on: ubuntu-latest
    needs: [ Install_Dependencies ]
    if: ${{ env.SHOULD_EXECUTE }}
    steps:
      - name: Download public folder
        uses: actions/download-artifact@v3
        with:
          name: public
      - name: Deploy to ${{ env.DOMAIN }}
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${{ env.DOMAIN }}
          project: '.'
          login: ${{secrets.surge_login}}
          token: ${{secrets.surge_token}}

  Deploy_review:
    <<: *deploy
    environment:
      name: review/$GITHUB_REF_NAME
    env:
      DOMAIN: $GITHUB_REF_NAME
      SHOULD_EXECUTE: github.ref != 'refs/heads/master'

  Deploy_staging:
    <<: *deploy
    environment:
      name: staging
    env:
      DOMAIN: ${{ env.STAGING_DOMAIN }}
      SHOULD_EXECUTE: github.ref == 'refs/heads/master'

  Deploy_production:
    <<: *deploy
    environment:
      name: production
    env:
      DOMAIN: ${{ env.PRODUCTION_DOMAIN }}
      SHOULD_EXECUTE: github.ref == 'refs/heads/master'

  Test_deployment:
    container: alpine
    runs-on: ubuntu-latest
    needs: [Deploy_production]
    if: github.ref == 'refs/heads/master'
    steps:
      - run: apk --no-cache add curl
      - run: echo curl --version
      - run: echo ${{ env.PRODUCTION_DOMAIN }}
      - run: curl https://${{ env.PRODUCTION_DOMAIN }} | tac | tac | grep -q "Gatsby"

